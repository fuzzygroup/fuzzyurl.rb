var search_data = {"index":{"searchIndex":["urlmask","decompose_url()","matches?()","new()","to_s()","gemfile","readme","url_mask.gemspec"],"longSearchIndex":["urlmask","urlmask::decompose_url()","urlmask#matches?()","urlmask::new()","urlmask#to_s()","","",""],"info":[["URLMask","","URLMask.html","",""],["decompose_url","URLMask","URLMask.html#method-c-decompose_url","(url)","<p>Given a URL (like `&#39;example.com/some/path?args=1`), returns a hash\ncontaining protocol (like `&#39;https&#39;`), â€¦\n"],["matches?","URLMask","URLMask.html#method-i-matches-3F","(url)",""],["new","URLMask","URLMask.html#method-c-new","(mask)",""],["to_s","URLMask","URLMask.html#method-i-to_s","()",""],["Gemfile","","Gemfile.html","","<p>gemspec\n"],["README","","README_md.html","",""],["url_mask.gemspec","","url_mask_gemspec.html","","<p>require &#39;./lib/url_mask/version&#39;\n<p>Gem::Specification.new do |s|\n\n<pre>s.name     = &#39;urlmask&#39;\ns.version ...</pre>\n"]]}}